#include <Servo.h>
#include <Keypad.h>
#include <Wire.h>
#include <LiquidCrystal_I2C.h>

#define SERVO_PIN 11
#define BUZZER_PIN 12 // Optional

Servo servo;
LiquidCrystal_I2C lcd(0x27, 16, 2); // I2C address 0x27

String password = "1234";
String input = "";

const byte ROWS = 4;
const byte COLS = 4;
char keys[ROWS][COLS] = {
  {'1','2','3','A'},
  {'4','5','6','B'},
  {'7','8','9','C'},
  {'*','0','#','D'}
};

byte rowPins[ROWS] = {2, 3, 4, 5};
byte colPins[COLS] = {6, 7, 8, 9};

Keypad keypad = Keypad(makeKeymap(keys), rowPins, colPins, ROWS, COLS);

void setup() {
  Serial.begin(9600);
  pinMode(BUZZER_PIN, OUTPUT);
  servo.attach(SERVO_PIN);
  servo.write(0); // Locked
  lcd.init();
  lcd.backlight();
  lcd.setCursor(0, 0);
  lcd.print("Enter Password:");
}

void loop() {
  char key = keypad.getKey();

  if (key) {
    lcd.setCursor(input.length(), 1);
    lcd.print("*");
    input += key;

    if (input.length() == 4) {
      delay(200);
      if (input == password) {
        accessGranted();
      } else {
        accessDenied();
      }
      input = "";
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("Enter Password:");
    }
  }
}

void accessGranted() {
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Access Granted");
  servo.write(90); // Open
  tone(BUZZER_PIN, 1000, 200);
  delay(5000);
  servo.write(0); // Lock again
}

void accessDenied() {
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Wrong Password");
  for (int i = 0; i < 3; i++) {
    tone(BUZZER_PIN, 1000);
    delay(200);
    noTone(BUZZER_PIN);
    delay(200);
  }
}
