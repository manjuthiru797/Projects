#include <Wire.h>
#include <LiquidCrystal_I2C.h>

#define TOTAL_SLOTS 10

LiquidCrystal_I2C lcd(0x27, 16, 2); // I2C LCD address (usually 0x27)

int irPins[TOTAL_SLOTS] = {
  4, 5, 12, 13, 14, 23, 16, 17, 18, 19  // Valid ESP32 GPIO pins
};

bool slotStatus[TOTAL_SLOTS];

void setup() {
  lcd.init();
  lcd.backlight();
  Serial.begin(9600);

  for (int i = 0; i < TOTAL_SLOTS; i++) {
    pinMode(irPins[i], INPUT);
  }

  lcd.setCursor(0, 0);
  lcd.print(" Smart Parking ");
  delay(2000);
  lcd.clear();
}

void loop() {
  int emptyCount = 0;
  String freeSlots = "";
  int recommendedSlot = -1;

  Serial.println("------ Slot Status ------");

  for (int i = 0; i < TOTAL_SLOTS; i++) {
    slotStatus[i] = digitalRead(irPins[i]);

    if (slotStatus[i] == HIGH) {
      Serial.print("Slot ");
      Serial.print(i + 1);
      Serial.println(": FREE");
      emptyCount++;

      if (recommendedSlot == -1) {
        recommendedSlot = i + 1; // First free slot
      }

      // Add to LCD string
      if (freeSlots.length() < 12) {
        freeSlots += String(i + 1);
        freeSlots += ",";
      }
    } else {
      Serial.print("Slot ");
      Serial.print(i + 1);
      Serial.println(": OCCUPIED");
    }
  }

  if (freeSlots.endsWith(",")) {
    freeSlots.remove(freeSlots.length() - 1);
  }

  // LCD Display
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Free: ");
  lcd.print(emptyCount);
  lcd.print("/10");

  lcd.setCursor(0, 1);
  if (emptyCount > 0) {
    lcd.print("Slots:");
    lcd.print(freeSlots);
  } else {
    lcd.print("No Free Slots");
  }

  // Serial recommendation
  if (recommendedSlot != -1) {
    Serial.print(">> Park at Slot ");
    Serial.println(recommendedSlot);
  } else {
    Serial.println(">> No Free Slot Available");
  }

  Serial.println("-------------------------\n");

  delay(5000);
}
